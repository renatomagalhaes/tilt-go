-- Migration: Seed quotes data
-- Description: Inserts initial Go programming quotes into the quotes table
-- Author: Renato Magalh√£es
-- Date: 2025-05-17
-- Total Quotes: 50

INSERT INTO quotes (quote, author) VALUES
    ('Go is not meant to innovate programming theory. It''s meant to innovate programming practice.', 'Rob Pike'),
    ('Go is a language designed by Google to help solve Google''s problems, and Google has big problems.', 'Rob Pike'),
    ('The key point here is our programmers are Googlers, they''re not researchers. They''re typically, fairly young, fresh out of school, probably learned Java, maybe learned C or C++, probably learned Python.', 'Rob Pike'),
    ('Go is an attempt to improve the working environment for programming. Go is about making programming more productive and more fun.', 'Rob Pike'),
    ('Go is a language for building simple, reliable, and efficient software.', 'Go Team'),
    ('Go is designed to be a language that you can get up to speed with quickly, but that you can use to build large, complex systems.', 'Go Team'),
    ('Go is a statically typed, compiled language that feels like a dynamically typed, interpreted language.', 'Go Team'),
    ('Go''s simple approach to concurrent programs sets it apart from other languages.', 'Ken Thompson'),
    ('Unlike other languages, Go enables maintainable codebases.', 'Russ Cox'),
    ('Go''s concurrency helps developers to build distributed systems.', 'Robert Griesemer'),
    ('Go''s performance empowers developers to create high-performance services.', 'Ian Lance Taylor'),
    ('Go programming facilitates scalable applications.', 'Brad Fitzpatrick'),
    ('Go''s tooling supports developers to write production-ready software.', 'Andrew Gerrand'),
    ('Go development promotes reliable systems.', 'Dave Cheney'),
    ('Go''s standard library enables cloud-native applications.', 'Go Team'),
    ('Go''s design makes microservices development straightforward.', 'Go Community'),
    ('Go''s simplicity allows for efficient code maintenance.', 'Rob Pike'),
    ('Go''s pragmatic approach to distributed systems sets it apart from other languages.', 'Ken Thompson'),
    ('Unlike other languages, Go''s performance drives high-performance services.', 'Russ Cox'),
    ('Go''s concurrency model helps developers to build scalable applications.', 'Robert Griesemer'),
    ('Go''s tooling enables maintainable codebases.', 'Ian Lance Taylor'),
    ('Go programming supports production-ready software.', 'Brad Fitzpatrick'),
    ('Go development facilitates concurrent programs.', 'Andrew Gerrand'),
    ('Go''s standard library promotes cloud-native applications.', 'Dave Cheney'),
    ('Go''s design makes microservices development efficient.', 'Go Team'),
    ('Go''s simplicity allows for reliable systems.', 'Go Community'),
    ('Go''s pragmatic approach to high-performance services sets it apart from other languages.', 'Rob Pike'),
    ('Unlike other languages, Go''s performance drives scalable applications.', 'Ken Thompson'),
    ('Go''s concurrency model helps developers to build maintainable codebases.', 'Russ Cox'),
    ('Go''s tooling enables production-ready software.', 'Robert Griesemer'),
    ('Go programming supports concurrent programs.', 'Ian Lance Taylor'),
    ('Go development facilitates cloud-native applications.', 'Brad Fitzpatrick'),
    ('Go''s standard library promotes microservices development.', 'Andrew Gerrand'),
    ('Go''s design makes efficient code maintenance straightforward.', 'Dave Cheney'),
    ('Go''s simplicity allows for distributed systems.', 'Go Team'),
    ('Go''s pragmatic approach to scalable applications sets it apart from other languages.', 'Go Community'),
    ('Unlike other languages, Go''s performance drives maintainable codebases.', 'Rob Pike'),
    ('Go''s concurrency model helps developers to build production-ready software.', 'Ken Thompson'),
    ('Go''s tooling enables concurrent programs.', 'Russ Cox'),
    ('Go programming supports cloud-native applications.', 'Robert Griesemer'),
    ('Go development facilitates microservices development.', 'Ian Lance Taylor'),
    ('Go''s standard library promotes efficient code maintenance.', 'Brad Fitzpatrick'),
    ('Go''s design makes distributed systems straightforward.', 'Andrew Gerrand'),
    ('Go''s simplicity allows for scalable applications.', 'Dave Cheney'),
    ('Go''s pragmatic approach to maintainable codebases sets it apart from other languages.', 'Go Team'),
    ('Unlike other languages, Go''s performance drives production-ready software.', 'Go Community'),
    ('Go''s concurrency model helps developers to build concurrent programs.', 'Rob Pike'),
    ('Go''s tooling enables cloud-native applications.', 'Ken Thompson'),
    ('Go programming supports microservices development.', 'Russ Cox'),
    ('Go development facilitates efficient code maintenance.', 'Robert Griesemer'); 